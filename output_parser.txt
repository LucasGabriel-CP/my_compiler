<func'> $ 
[def, def, 0, 3]

<func> $ 
[def, def, 0, 3]

def id ( <arg> ) { <bloco> } <func> $ 
[def, def, 0, 3]

id ( <arg> ) { <bloco> } <func> $ 
[id, main, 0, 8]

( <arg> ) { <bloco> } <func> $ 
[(, (, 0, 10]

<arg> ) { <bloco> } <func> $ 
[), ), 0, 12]

empty ) { <bloco> } <func> $ 
[), ), 0, 12]

) { <bloco> } <func> $ 
[), ), 0, 12]

{ <bloco> } <func> $ 
[{, {, 0, 14]

<bloco> } <func> $ 
[int, int, 1, 4]

<comando> <bloco> } <func> $ 
[int, int, 1, 4]

<decl> <bloco> } <func> $ 
[int, int, 1, 4]

int id <decl'> ; <bloco> } <func> $ 
[int, int, 1, 4]

id <decl'> ; <bloco> } <func> $ 
[id, a, 1, 6]

<decl'> ; <bloco> } <func> $ 
[,, ,, 1, 7]

, id <decl'> ; <bloco> } <func> $ 
[,, ,, 1, 7]

id <decl'> ; <bloco> } <func> $ 
[id, b, 1, 9]

<decl'> ; <bloco> } <func> $ 
[,, ,, 1, 10]

, id <decl'> ; <bloco> } <func> $ 
[,, ,, 1, 10]

id <decl'> ; <bloco> } <func> $ 
[id, c, 1, 12]

<decl'> ; <bloco> } <func> $ 
[;, ;, 1, 13]

empty ; <bloco> } <func> $ 
[;, ;, 1, 13]

; <bloco> } <func> $ 
[;, ;, 1, 13]

<bloco> } <func> $ 
[float, float, 2, 6]

<comando> <bloco> } <func> $ 
[float, float, 2, 6]

<decl> <bloco> } <func> $ 
[float, float, 2, 6]

float id <decl'> ; <bloco> } <func> $ 
[float, float, 2, 6]

id <decl'> ; <bloco> } <func> $ 
[id, d, 2, 8]

<decl'> ; <bloco> } <func> $ 
[;, ;, 2, 9]

empty ; <bloco> } <func> $ 
[;, ;, 2, 9]

; <bloco> } <func> $ 
[;, ;, 2, 9]

<bloco> } <func> $ 
[string, string, 3, 7]

<comando> <bloco> } <func> $ 
[string, string, 3, 7]

<decl> <bloco> } <func> $ 
[string, string, 3, 7]

string id <decl'> ; <bloco> } <func> $ 
[string, string, 3, 7]

id <decl'> ; <bloco> } <func> $ 
[id, e, 3, 9]

<decl'> ; <bloco> } <func> $ 
[;, ;, 3, 10]

empty ; <bloco> } <func> $ 
[;, ;, 3, 10]

; <bloco> } <func> $ 
[;, ;, 3, 10]

<bloco> } <func> $ 
[read, read, 4, 5]

<comando> <bloco> } <func> $ 
[read, read, 4, 5]

<read> <bloco> } <func> $ 
[read, read, 4, 5]

read ( id <read'> ) ; <bloco> } <func> $ 
[read, read, 4, 5]

( id <read'> ) ; <bloco> } <func> $ 
[(, (, 4, 6]

id <read'> ) ; <bloco> } <func> $ 
[id, a, 4, 7]

<read'> ) ; <bloco> } <func> $ 
[,, ,, 4, 8]

, id <read'> ) ; <bloco> } <func> $ 
[,, ,, 4, 8]

id <read'> ) ; <bloco> } <func> $ 
[id, b, 4, 10]

<read'> ) ; <bloco> } <func> $ 
[), ), 4, 11]

empty ) ; <bloco> } <func> $ 
[), ), 4, 11]

) ; <bloco> } <func> $ 
[), ), 4, 11]

; <bloco> } <func> $ 
[;, ;, 4, 12]

<bloco> } <func> $ 
[while, while, 5, 6]

<comando> <bloco> } <func> $ 
[while, while, 5, 6]

<while> <bloco> } <func> $ 
[while, while, 5, 6]

while ( <exp> ) { <bloco> } <bloco> } <func> $ 
[while, while, 5, 6]

( <exp> ) { <bloco> } <bloco> } <func> $ 
[(, (, 5, 8]

<exp> ) { <bloco> } <bloco> } <func> $ 
[id, a, 5, 9]

<termo> <exp'> ) { <bloco> } <bloco> } <func> $ 
[id, a, 5, 9]

id <exp'> ) { <bloco> } <bloco> } <func> $ 
[id, a, 5, 9]

<exp'> ) { <bloco> } <bloco> } <func> $ 
[opL, less, 5, 11]

opL <termo> ) { <bloco> } <bloco> } <func> $ 
[opL, less, 5, 11]

<termo> ) { <bloco> } <bloco> } <func> $ 
[INumber, 3, 5, 13]

constante ) { <bloco> } <bloco> } <func> $ 
[INumber, 3, 5, 13]

) { <bloco> } <bloco> } <func> $ 
[), ), 5, 14]

{ <bloco> } <bloco> } <func> $ 
[{, {, 5, 16]

<bloco> } <bloco> } <func> $ 
[print, print, 6, 7]

<comando> <bloco> } <bloco> } <func> $ 
[print, print, 6, 7]

<print> <bloco> } <bloco> } <func> $ 
[print, print, 6, 7]

print ( <termo> <print'> ) ; <bloco> } <bloco> } <func> $ 
[print, print, 6, 7]

( <termo> <print'> ) ; <bloco> } <bloco> } <func> $ 
[(, (, 6, 8]

<termo> <print'> ) ; <bloco> } <bloco> } <func> $ 
[id, a, 6, 9]

id <print'> ) ; <bloco> } <bloco> } <func> $ 
[id, a, 6, 9]

<print'> ) ; <bloco> } <bloco> } <func> $ 
[), ), 6, 10]

empty ) ; <bloco> } <bloco> } <func> $ 
[), ), 6, 10]

) ; <bloco> } <bloco> } <func> $ 
[), ), 6, 10]

; <bloco> } <bloco> } <func> $ 
[;, ;, 6, 11]

<bloco> } <bloco> } <func> $ 
[id, a, 7, 3]

<comando> <bloco> } <bloco> } <func> $ 
[id, a, 7, 3]

<exp_atrib> <bloco> } <bloco> } <func> $ 
[id, a, 7, 3]

id = <exp> ; <bloco> } <bloco> } <func> $ 
[id, a, 7, 3]

= <exp> ; <bloco> } <bloco> } <func> $ 
[=, =, 7, 5]

<exp> ; <bloco> } <bloco> } <func> $ 
[id, a, 7, 7]

<termo> <exp'> ; <bloco> } <bloco> } <func> $ 
[id, a, 7, 7]

id <exp'> ; <bloco> } <bloco> } <func> $ 
[id, a, 7, 7]

<exp'> ; <bloco> } <bloco> } <func> $ 
[opM, mul, 7, 9]

opM <termo> <exp'> ; <bloco> } <bloco> } <func> $ 
[opM, mul, 7, 9]

<termo> <exp'> ; <bloco> } <bloco> } <func> $ 
[(, (, 7, 11]

( <exp> ) <exp'> ; <bloco> } <bloco> } <func> $ 
[(, (, 7, 11]

<exp> ) <exp'> ; <bloco> } <bloco> } <func> $ 
[INumber, 1, 7, 12]

<termo> <exp'> ) <exp'> ; <bloco> } <bloco> } <func> $ 
[INumber, 1, 7, 12]

constante <exp'> ) <exp'> ; <bloco> } <bloco> } <func> $ 
[INumber, 1, 7, 12]

<exp'> ) <exp'> ; <bloco> } <bloco> } <func> $ 
[opM, add, 7, 14]

opM <termo> <exp'> ) <exp'> ; <bloco> } <bloco> } <func> $ 
[opM, add, 7, 14]

<termo> <exp'> ) <exp'> ; <bloco> } <bloco> } <func> $ 
[INumber, 3, 7, 16]

constante <exp'> ) <exp'> ; <bloco> } <bloco> } <func> $ 
[INumber, 3, 7, 16]

<exp'> ) <exp'> ; <bloco> } <bloco> } <func> $ 
[), ), 7, 17]

empty ) <exp'> ; <bloco> } <bloco> } <func> $ 
[), ), 7, 17]

) <exp'> ; <bloco> } <bloco> } <func> $ 
[), ), 7, 17]

<exp'> ; <bloco> } <bloco> } <func> $ 
[;, ;, 7, 18]

empty ; <bloco> } <bloco> } <func> $ 
[;, ;, 7, 18]

; <bloco> } <bloco> } <func> $ 
[;, ;, 7, 18]

<bloco> } <bloco> } <func> $ 
[}, }, 8, 2]

empty } <bloco> } <func> $ 
[}, }, 8, 2]

} <bloco> } <func> $ 
[}, }, 8, 2]

<bloco> } <func> $ 
[return, return, 9, 7]

<comando> <bloco> } <func> $ 
[return, return, 9, 7]

<return_exp> <bloco> } <func> $ 
[return, return, 9, 7]

return <termo> ; <bloco> } <func> $ 
[return, return, 9, 7]

<termo> ; <bloco> } <func> $ 
[INumber, 0, 9, 9]

constante ; <bloco> } <func> $ 
[INumber, 0, 9, 9]

; <bloco> } <func> $ 
[;, ;, 9, 10]

<bloco> } <func> $ 
[}, }, 10, 1]

empty } <func> $ 
[}, }, 10, 1]

} <func> $ 
[}, }, 10, 1]

<func> $ 
[$, $, -1, -1]

empty $ 
[$, $, -1, -1]

$ 
[$, $, -1, -1]


-------------------------------------------------------------------------------
Any errors/warnings
